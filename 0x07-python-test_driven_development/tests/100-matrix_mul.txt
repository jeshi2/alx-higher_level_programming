Importing the function from the module:
>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

Check: module docstring:
 >>> m = __import__("100-matrix_mul").__doc__
 >>> len(m) > 1
 True

Check: function docstring:
 >>> f = __import__("100-matrix_mul").matrix_mul.__doc__
         >>> len(f) > 1
         True

Check: no args:
 >>> matrix_mul()
 Traceback (most recent call last):
 ...
 TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'


1. Test valid multiplication:
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

2. Test valid multiplication with different sizes:
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

3. Test m_a is not a list:
>>> matrix_mul(123, [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list or m_b must be a list

4. Test m_b is not a list:
>>> matrix_mul([[1, 2], [3, 4]], 123)
Traceback (most recent call last):
    ...
TypeError: m_a must be a list or m_b must be a list

5. Test m_a is not a list of lists:
>>> matrix_mul([1, 2, 3], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists or m_b must be a list of lists

6. Test m_b is not a list of lists:
>>> matrix_mul([[1, 2], [3, 4]], [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists or m_b must be a list of lists

7. Test m_a is an empty list:
>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty or m_b can't be empty

8. Test m_b is an empty list:
>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty or m_b can't be empty

9. Test m_a contains non-integer/float elements:
>>> matrix_mul([[1, 2], [3, 'a']], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats

10. Test m_b contains non-integer/float elements:
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 'b']])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats

11. Test m_a rows have different sizes:
>>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size or each row of m_b must be of the same size

12. Test m_b rows have different sizes:
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size or each row of m_b must be of the same size

13. Test m_a and m_b cannot be multiplied:
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [5, 6]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

